{"is_source_file": true, "format": "Python", "description": "This file provides database configuration and initialization for a Flask application using SQLAlchemy. It includes functions to determine the database URI, initialize the database with the Flask app, and create tables if they do not already exist.", "external_files": ["flask", "flask_sqlalchemy", "os", "datetime", "typing"], "external_methods": ["os.getenv", "app.config.setdefault", "db.init_app", "db.create_all"], "published": ["get_database_uri", "init_db", "db"], "classes": [], "methods": [{"name": "str get_database_uri()", "description": "Returns the database URI from an environment variable or defaults to a local SQLite database.", "scope": "", "scopeKind": ""}, {"name": "None init_db(app: Flask)", "description": "Initializes the SQLAlchemy database within a Flask app, sets configuration, and creates tables if needed.", "scope": "", "scopeKind": ""}], "calls": ["os.getenv", "app.config.setdefault", "db.init_app", "db.create_all"], "search-terms": ["database initialization", "Flask SQLAlchemy setup", "init_db function", "get_database_uri function", "database URI environment variable"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "db", "path": "/home/kavia/workspace/code-generation/note-management-system-180214-180238/notes_backend/app/db.py", "pattern": "/^db = SQLAlchemy()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_database_uri", "path": "/home/kavia/workspace/code-generation/note-management-system-180214-180238/notes_backend/app/db.py", "pattern": "/^def get_database_uri() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "init_db", "path": "/home/kavia/workspace/code-generation/note-management-system-180214-180238/notes_backend/app/db.py", "pattern": "/^def init_db(app: Flask) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(app: Flask)"}], "hash": "86b4f4b59da9c03029e648976f1c085b", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/app/db.py", "fields": [{"name": "db = SQLAlchemy()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"15": ""}]}